(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e,this._link=n,this._likes=r,this._cardSelector=o,this._handleCardClick=i,this._ownerId=a,this._handleLikeCard=u,this._handleDeleteCard=c}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(e){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._like=this._element.querySelector(".button_variant_like"),this._delete=this._element.querySelector(".button_variant_delete"),this._ownerId!==e&&this._delete.remove(),this._setEventListeners(),this._element.querySelector(".element__town").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._likeCount=this._element.querySelector(".element__like-count"),this.setLikesCount(this._likes),this._element}},{key:"_deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"likeCard",value:function(){this._like.classList.add("button_variant_active-like")}},{key:"deleteLikeCard",value:function(){this._like.classList.remove("button_variant_active-like")}},{key:"isLiked",value:function(){return this._like.classList.contains("button_variant_active-like")}},{key:"isLikedByMe",value:function(e){var t=this;return e.some((function(e){return e._id===t._ownerId}))}},{key:"setLikesCount",value:function(e){this._likeCount.textContent=e}},{key:"_setEventListeners",value:function(){var e=this;this._like.addEventListener("click",(function(){return e._handleLikeCard()})),this._delete.addEventListener("click",(function(){return e._handleDeleteCard()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationSettings=t,this._formElement=n,this._buttonElement=this._formElement.querySelector(this._validationSettings.popupSubmit),this._inputList=Array.from(this._formElement.querySelectorAll("".concat(this._validationSettings.popupInput)))}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationSettings.inputError),t.classList.add(this._validationSettings.inputErrorActive),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationSettings.inputError),t.classList.remove(this._validationSettings.inputErrorActive),t.textContent=""}},{key:"_toggleButtonState",value:function(){var e=this._formElement.checkValidity();this._buttonElement.classList.toggle(this._validationSettings.buttonInactive,!e),this._buttonElement.disabled=!e}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()})),this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},c.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._imgUrl=t,r._imgName=n,r}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._imgUrl.src=t,this._imgUrl.alt=n,this._imgName.textContent=n,c(p(a.prototype),"open",this).call(this)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=_(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function _(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._buttonSave=n._popup.querySelector(".popup__save-button"),n._textSaveButton=n._buttonSave.textContent,n._handleFormSubmit=t,n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){var t=this;Object.keys(e).forEach((function(n){var r=e[n];t._inputList.find((function(e){return n===e.name})).value=r}))}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),v(k(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){var e=this._popup.querySelector(".popup__form");v(k(a.prototype),"close",this).call(this),e.reset()}},{key:"loading",value:function(e){this._buttonSave.textContent=e?"Сохранение...":this._textSaveButton}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.nameUserSelector,r=t.workUserSelector,o=t.avatarUserSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameUser=document.querySelector(n),this._workUser=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{nameUser:this._nameUser.textContent,workUser:this._workUser.textContent}}},{key:"setUserInfo",value:function(e){this._nameUser.textContent=e.nameUser,this._workUser.textContent=e.workUser}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},j=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch(this._url+"/users/me",{method:"GET",headers:this._headers}).then(L)}},{key:"getInitialCards",value:function(){return fetch(this._url+"/cards",{method:"GET",headers:this._headers}).then(L)}},{key:"saveUserInfo",value:function(e){return fetch(this._url+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.nameUser,about:e.workUser})}).then(L)}},{key:"addCard",value:function(e){return fetch(this._url+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(L)}},{key:"deleteCard",value:function(e){return fetch(this._url+"/cards/".concat(e),{method:"DELETE",headers:this._headers}).then(L)}},{key:"likeCard",value:function(e){return fetch(this._url+"/cards/".concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(L)}},{key:"deleteLikeCard",value:function(e){return fetch(this._url+"/cards/".concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(L)}},{key:"editAvatar",value:function(e){return fetch(this._url+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(L)}},{key:"getUserInfoAndInitialCards",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function T(e,t){return T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},T(e,t)}function R(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var x,D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._buttonConfirmDeleteCard=t._popup.querySelector(".popup__save-button"),t._functionDeleteCard=null,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;U(A(a.prototype),"setEventListeners",this).call(this),this._buttonConfirmDeleteCard.addEventListener("click",(function(){e._functionDeleteCard()}))}},{key:"open",value:function(e){U(A(a.prototype),"open",this).call(this),this._functionDeleteCard=e}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i),V={inputError:"popup__input_type_error",inputErrorActive:"popup__input-error_active",buttonInactive:"button_variant_inactive",popupInput:".popup__input",popupSubmit:".popup__submit",popupForm:".popup__form"},B=document.querySelector(".popup_add").querySelector(".popup__form"),N=document.querySelector(".popup_edit").querySelector(".popup__form"),M=document.querySelector(".button_variant_add"),F=document.querySelector(".button_variant_edit"),J=document.querySelector(".popup__img"),G=document.querySelector(".popup__img-info"),H=document.querySelector(".button_variant_avatar"),z=document.querySelector(".popup_edit-avatar").querySelector(".popup__form");function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K=new j({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"d88185d7-a57f-426c-977a-fbfd58d99413","Content-Type":"application/json"}});function Q(e,n,r,o,i){var a=new t(e,n,r.length,"#template",(function(){return Y.open({name:e,link:n})}),o,(function(){a.isLiked()?K.deleteLikeCard(i).then((function(e){a.deleteLikeCard(),a.setLikesCount(e.likes.length)})).catch((function(e){return console.log(e)})):K.likeCard(i).then((function(e){a.likeCard(),a.setLikesCount(e.likes.length)})).catch((function(e){return console.log(e)}))}),(function(){ee.open((function(){K.deleteCard(i).then((function(){a._deleteCard(),ee.close()})).catch((function(e){return console.log(e)}))}))})),u=a.generateCard(x);return a.isLikedByMe(r)&&K.likeCard(i).then((function(){a.likeCard()})).catch((function(e){return console.log(e)})),u}var W=new C({nameUserSelector:".profile__title",workUserSelector:".profile__subtitle",avatarUserSelector:".profile__avatar"}),X=new S({renderer:function(e){var t=Q(e.name,e.link,e.likes,e.owner._id,e._id);X.addItem(t)}},".elements");K.getUserInfoAndInitialCards().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a={nameUser:i.name,workUser:i.about,avatar:i.avatar,_id:i._id,cohort:i.cohort};W.setUserInfo(a),x=i._id,W.setUserAvatar(a),X.renderItems(o)})).catch((function(e){return console.log(e)}));var Y=new h(".popup_view-card",J,G);Y.setEventListeners();var Z=new g(".popup_add",(function(e){Z.loading(!0),K.addCard(e).then((function(e){var t=Q(e.name,e.link,e.likes,e.owner._id,e._id);X.addItem(t),Z.close()})).catch((function(e){return console.log(e)})).finally((function(){Z.loading(!1)}))}));Z.setEventListeners(),M.addEventListener("click",(function(){re.resetValidation(),Z.open()}));var ee=new D(".popup_delete-card");ee.setEventListeners();var te=new g(".popup_edit",(function(e){te.loading(!0),K.saveUserInfo(e).then((function(){W.setUserInfo(e),te.close()})).catch((function(e){return console.log(e)})).finally((function(){te.loading(!1)}))}));te.setEventListeners(),F.addEventListener("click",(function(){var e=W.getUserInfo();te.setInputValues(e),oe.resetValidation(),te.open()}));var ne=new g(".popup_edit-avatar",(function(e){ne.loading(!0),K.editAvatar(e).then((function(){W.setUserAvatar(e),ne.close()})).catch((function(e){return console.log(e)})).finally((function(){ne.loading(!1)}))}));ne.setEventListeners(),H.addEventListener("click",(function(){ie.resetValidation(),ne.open()}));var re=new r(V,B),oe=new r(V,N),ie=new r(V,z);oe.enableValidation(),re.enableValidation(),ie.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,