(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,u,c,l){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e,this._link=n,this._likes=r,this._cardSelector=o,this._handleCardClick=i,this._popupDeleteCard=a,this._ownerId=u,this._cardId=c,this._api=l}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(e){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._like=this._element.querySelector(".button_variant_like"),this._delete=this._element.querySelector(".button_variant_delete"),this._ownerId!==e&&this._delete.remove(),this._setEventListeners(),this._element.querySelector(".element__town").textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._likeCount=this._element.querySelector(".element__like-count"),this._likeCount.textContent=this._likes,this._element}},{key:"_deleteCard",value:function(){this._element.remove(),this._element=null}},{key:"_likeCard",value:function(){this._like.classList.add("button_variant_active-like")}},{key:"_deleteLikeCard",value:function(){this._like.classList.remove("button_variant_active-like")}},{key:"_setEventListeners",value:function(){var e=this;this._like.addEventListener("click",(function(){e._like.classList.contains("button_variant_active-like")?e._api.deleteLikeCard(e._cardId).then((function(){e._deleteLikeCard();var t=Number(e._likeCount.textContent);e._likeCount.textContent=t-1})).catch((function(e){return console.log(e)})):e._api.likeCard(e._cardId).then((function(){e._likeCard();var t=Number(e._likeCount.textContent);e._likeCount.textContent=t+1})).catch((function(e){return console.log(e)}))})),this._delete.addEventListener("click",(function(){e._popupDeleteCard.open((function(){e._api.deleteCard(e._cardId).then((function(){e._deleteCard()})).catch((function(e){return console.log(e)}))}))})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationSettings=t,this._formElement=n,this._buttonElement=this._formElement.querySelector(this._validationSettings.popupSubmit),this._inputList=Array.from(this._formElement.querySelectorAll("".concat(this._validationSettings.popupInput)))}var t,r;return t=e,(r=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._validationSettings.inputError),t.classList.add(this._validationSettings.inputErrorActive),t.textContent=e.validationMessage}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._validationSettings.inputError),t.classList.remove(this._validationSettings.inputErrorActive),t.textContent=""}},{key:"_toggleButtonState",value:function(){var e=this._formElement.checkValidity();this._buttonElement.classList.toggle(this._validationSettings.buttonInactive,!e),this._buttonElement.disabled=!e}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_opened")}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){t.target===t.currentTarget&&e.close()})),this._popup.querySelector(".popup__close-button").addEventListener("click",this.close.bind(this))}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(){return c="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=l(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},c.apply(this,arguments)}function l(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=p(e)););return e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function f(e,t){if(t&&("object"===a(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function p(e){return p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},p(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=p(r);if(o){var n=p(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return f(this,e)});function a(e,t,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(r=i.call(this,e))._imgUrl=t,r._imgName=n,r}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._imgUrl.src=t,this._imgUrl.alt=n,this._imgName.textContent=n,c(p(a.prototype),"open",this).call(this)}}])&&u(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=v(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},y.apply(this,arguments)}function v(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function b(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._buttonSave=n._popup.querySelector(".popup__save-button"),n._textSaveButton=n._buttonSave.textContent,n._handleFormSubmit=t,n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),y(k(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){var e=this._popup.querySelector(".popup__form");y(k(a.prototype),"close",this).call(this),e.reset()}},{key:"loading",value:function(e){this._buttonSave.textContent=e?"Сохранение...":this._textSaveButton}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i);function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._initialArray=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(){var e=this;this._initialArray.forEach((function(t){e._renderer(t)}))}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t){var n=t.nameUserSelector,r=t.workUserSelector,o=t.avatarUserSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameUser=document.querySelector(n),this._workUser=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{nameUser:this._nameUser.textContent,workUser:this._workUser.textContent}}},{key:"setUserInfo",value:function(e){this._nameUser.textContent=e.nameUser,this._workUser.textContent=e.workUser}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}}])&&S(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))},L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=t.url,this._headers=t.headers}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch(this._url+"/users/me",{method:"GET",headers:this._headers}).then(j)}},{key:"getInitialCards",value:function(){return fetch(this._url+"/cards",{method:"GET",headers:this._headers}).then(j)}},{key:"saveUserInfo",value:function(e){return fetch(this._url+"/users/me",{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.nameUser,about:e.workUser})}).then(j)}},{key:"addCard",value:function(e){return fetch(this._url+"/cards",{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(j)}},{key:"deleteCard",value:function(e){return fetch(this._url+"/cards/".concat(e),{method:"DELETE",headers:this._headers}).then(j)}},{key:"likeCard",value:function(e){return fetch(this._url+"/cards/".concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(j)}},{key:"deleteLikeCard",value:function(e){return fetch(this._url+"/cards/".concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(j)}},{key:"editAvatar",value:function(e){return fetch(this._url+"/users/me/avatar",{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.avatar})}).then(j)}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=q(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function q(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function R(e,t){return R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},R(e,t)}function T(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var D,A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&R(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._buttonConfirmDeleteCard=t._popup.querySelector(".popup__save-button"),t._functionDeleteCard=null,t}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;U(x(a.prototype),"setEventListeners",this).call(this),this._buttonConfirmDeleteCard.addEventListener("click",(function(){e._functionDeleteCard(),e.close()}))}},{key:"open",value:function(e){U(x(a.prototype),"open",this).call(this),this._functionDeleteCard=e}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(i),V={inputError:"popup__input_type_error",inputErrorActive:"popup__input-error_active",buttonInactive:"button_variant_inactive",popupInput:".popup__input",popupSubmit:".popup__submit",popupForm:".popup__form"},B=document.querySelector(".popup_add").querySelector(".popup__form"),N=document.querySelector(".popup_edit"),F=N.querySelector(".popup__form"),J=document.querySelector(".button_variant_add"),G=document.querySelector(".button_variant_edit"),H=".elements",z=N.querySelector(".popup__input_name-user"),M=N.querySelector(".popup__input_work-user"),K=document.querySelector(".popup__img"),Q=document.querySelector(".popup__img-info"),W=document.querySelector(".button_variant_avatar"),X=document.querySelector(".popup_edit-avatar").querySelector(".popup__form"),Y=new L({url:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"d88185d7-a57f-426c-977a-fbfd58d99413","Content-Type":"application/json"}}),Z=new C({nameUserSelector:".profile__title",workUserSelector:".profile__subtitle",avatarUserSelector:".profile__avatar"});Y.getUserInfo().then((function(e){var t={nameUser:e.name,workUser:e.about,avatar:e.avatar,_id:e._id,cohort:e.cohort};Z.setUserInfo(t),D=e._id,Z.setUserAvatar(t)})).catch((function(e){return console.log(e)})),Y.getInitialCards().then((function(e){var t=new E({items:e,renderer:function(e){var n=ee(e.name,e.link,e.likes.length,e.owner._id,e._id);t.addItem(n)}},H);t.renderItems()})).catch((function(e){return console.log(e)}));var $=new h(".popup_view-card",K,Q);function ee(e,n,r,o,i){return new t(e,n,r,"#template",(function(){return $.open({name:e,link:n})}),ne,o,i,Y).generateCard(D)}$.setEventListeners();var te=new g(".popup_add",(function(e){te.loading(!0),Y.addCard(e).then((function(e){var t=ee(e.name,e.link,e.likes.length,e.owner._id,e._id),n=new E({items:t,renderer:function(e){var t=ee(e.name,e.link,e.likes.length,e.owner._id,e._id);n.addItem(t)}},H);n.addItem(t),te.close()})).catch((function(e){return console.log(e)})).finally((function(){te.loading(!1)}))}));te.setEventListeners(),J.addEventListener("click",(function(){ie.resetValidation(),te.open()}));var ne=new A(".popup_delete-card");ne.setEventListeners();var re=new g(".popup_edit",(function(e){Z.setUserInfo(e),re.loading(!0),Y.saveUserInfo(e).then((function(){re.close()})).catch((function(e){return console.log(e)})).finally((function(){re.loading(!1)}))}));re.setEventListeners(),G.addEventListener("click",(function(){var e=Z.getUserInfo();z.value=e.nameUser,M.value=e.workUser,ae.resetValidation(),re.open()}));var oe=new g(".popup_edit-avatar",(function(e){oe.loading(!0),Y.editAvatar(e).then((function(){Z.setUserAvatar(e),oe.close()})).catch((function(e){return console.log(e)})).finally((function(){oe.loading(!1)}))}));oe.setEventListeners(),W.addEventListener("click",(function(){ue.resetValidation(),oe.open()}));var ie=new r(V,B),ae=new r(V,F),ue=new r(V,X);ae.enableValidation(),ie.enableValidation(),ue.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,